{"version":3,"sources":["components/Loader/pages/HomePage.tsx","components/Loader/pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/Loader/pages/PersonLink.tsx","components/Loader/pages/PeopleTable.tsx","components/Loader/pages/PeoplePage.tsx","components/Loader/pages/CustomNavLink.tsx","components/Loader/pages/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","props","person","isWoman","sex","to","slug","classNames","name","fields","id","fieldName","PeopleTable","people","useParams","map","field","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","loadedPeople","loadPeople","peopleWithParents","fountFather","find","foundMother","Object","assign","useEffect","hasNoPeople","length","CustomNavLink","title","isActive","NavBar","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.28f22d63.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: React.FC<Props> = (props) => {\n  const { person } = props;\n  const isWoman = person.sex === 'f';\n\n  return (\n    <Link\n      to={person.slug}\n      className={classNames({\n        'has-text-danger': isWoman,\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router';\nimport { Person } from '../../../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nconst fields = [\n  { id: 1, fieldName: 'Name' },\n  { id: 2, fieldName: 'Sex' },\n  { id: 3, fieldName: 'Born' },\n  { id: 4, fieldName: 'Died' },\n  { id: 5, fieldName: 'Mother' },\n  { id: 6, fieldName: 'Father' },\n];\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {fields.map((field) => (\n            <th key={field.id}>{field.fieldName}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {people.map((person) => (\n          <tr\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n            key={person.slug}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother ? (\n                <PersonLink person={person.mother} />\n              ) : (\n                person.motherName ?? '-'\n              )}\n            </td>\n            <td>\n              {person.father ? (\n                <PersonLink person={person.father} />\n              ) : (\n                person.fatherName ?? '-'\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../../api';\nimport { Person } from '../../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const loadedPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const loadPeople = await getPeople();\n\n      const peopleWithParents = loadPeople.map((person) => {\n        const fountFather = loadPeople.find(\n          (father) => father.name === person.fatherName,\n        );\n        const foundMother = loadPeople.find(\n          (mother) => mother.name === person.motherName,\n        );\n\n        return Object.assign(person, {\n          father: fountFather,\n          mother: foundMother,\n        });\n      });\n\n      setPeople(peopleWithParents);\n    } catch (error) {\n      setErrorMessage(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadedPeople();\n  }, []);\n\n  const hasNoPeople = !isLoading && !people.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {hasNoPeople && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {!isLoading && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  title: string;\n}\n\nexport const CustomNavLink: React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      to={to}\n      className={(props) => {\n        const { isActive } = props;\n\n        return classNames('navbar-item', {\n          'has-background-grey-lighter': isActive,\n        });\n      }}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { CustomNavLink } from './CustomNavLink';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <CustomNavLink to=\"/\" title=\"Home\" />\n        <CustomNavLink to=\"/people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/Loader/pages/HomePage';\nimport { NotFoundPage } from './components/Loader/pages/NotFoundPage';\nimport { PeoplePage } from './components/Loader/pages/PeoplePage';\nimport { NavBar } from './components/Loader/pages/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}